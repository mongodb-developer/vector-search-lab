"use strict";(self.webpackChunkvector_search_lab=self.webpackChunkvector_search_lab||[]).push([[165],{7273:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"advanced-features/vector-quantization","title":"\ud83d\udcd8\ud83d\udc50 Vector Quantization","description":"Vector Quantization is a technique to reduce the number of bits that represent a vector. This can help reduce the storage and memory requirements for vector embeddings.","source":"@site/docs/40-advanced-features/3-vector-quantization.mdx","sourceDirName":"40-advanced-features","slug":"/advanced-features/vector-quantization","permalink":"/vector-search-lab/docs/advanced-features/vector-quantization","draft":false,"unlisted":false,"editUrl":"https://github.com/mongodb-developer/vector-search-lab/blob/main/docs/40-advanced-features/3-vector-quantization.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udcd8\ud83d\udc50 Similarity Functions","permalink":"/vector-search-lab/docs/advanced-features/similarity-functions"},"next":{"title":"Other Search Methods","permalink":"/vector-search-lab/docs/category/other-search-methods"}}');var o=n(4848),a=n(8453);const i={},s="\ud83d\udcd8\ud83d\udc50 Vector Quantization",c={},d=[];function u(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"-vector-quantization",children:"\ud83d\udcd8\ud83d\udc50 Vector Quantization"})}),"\n",(0,o.jsx)(t.p,{children:"Vector Quantization is a technique to reduce the number of bits that represent a vector. This can help reduce the storage and memory requirements for vector embeddings."}),"\n",(0,o.jsx)(t.p,{children:"Atlas Vector Search supports automatic quantization of double or 32-bit float values in your vector embeddings. You can set the quantization method for vector type fields in your index definition."}),"\n",(0,o.jsxs)(t.p,{children:["\ud83d\udcda ",(0,o.jsx)(t.a,{href:"https://www.mongodb.com/docs/atlas/atlas-vector-search/vector-quantization",children:"Vector Quantization"})]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"CODE_BLOCK_16"})}),"\n",(0,o.jsxs)(n,{children:[(0,o.jsx)("summary",{children:"Answer"}),(0,o.jsx)("div",{children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-Python",children:'{\n    "name": ATLAS_VECTOR_SEARCH_INDEX_NAME,\n    "type": "vectorSearch",\n    "definition": {\n        "fields": [\n            {\n                "type": "vector",\n                "path": "embedding",\n                "numDimensions": 512,\n                "similarity": "cosine",\n                "quantization": "scalar",\n            },\n        ]\n    },\n}\n'})})})]})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var r=n(6540);const o={},a=r.createContext(o);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);